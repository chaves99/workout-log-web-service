name: Workout Log Web Service CI/CD

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      output_version: ${{ steps.project_version.outputs.version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
          cache: maven

      - name: Get project version
        id: project_version
        run: echo version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) >> "$GITHUB_OUTPUT"

      - name: Maven build
        run: mvn package -Dmaven.test.skip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jar_file
          path: target/*jar

  push-image:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: jar_file

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        env:
          PROJECT_VERSION: ${{ needs.build.outputs.output_version }}
          USER: ${{ secrets.DOCKERHUB_USER }}
        with:
          push: true
          tags: ${{env.USER}}/workout-log-web-service:${{env.PROJECT_VERSION}}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Google Auth
        id: google-auth
        uses: "google-github-actions/auth@v0"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ vars.WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ vars.WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}
          # NOTE: You can also set env variables here:
          #  env_vars: |
          #  NODE_ENV=production
          #  TOKEN_EXPIRE=6400
